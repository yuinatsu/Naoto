#include <DxLib.h>
#include "Mouse.h"
#include "../_debug/_DebugConOut.h"

//--------------------------------------------------------------------------
//●コンストラクタ→初期化
//--------------------------------------------------------------------------
Mouse::Mouse()
{
	//TRACE("Mouseクラスを生成\n");
	Init();
}

//--------------------------------------------------------------------------
//●コンストラクタ
// offset：オフセット値
//--------------------------------------------------------------------------
Mouse::Mouse(Vector2 offset)
{
	//TRACE("Mouseクラスを生成\n");
	Init();
	offset_ = offset;
}

//--------------------------------------------------------------------------
//●デストラクタ
//--------------------------------------------------------------------------
Mouse::~Mouse()
{
}

//--------------------------------------------------------------------------
//●keyCodeのキーが押されているフレーム数を取得
//--------------------------------------------------------------------------
int Mouse::GetPresCnt(int keyCode)
{
	if (!isValidKeycode(keyCode))
	{
		return -1;
	}
	return btnPresCnt_[keyCode];
}

//--------------------------------------------------------------------------
//●keyCodeのキーが離されているフレーム数を取得
//--------------------------------------------------------------------------
int Mouse::GetRelCnt(int keyCode)
{
	if (!isValidKeycode(keyCode))
	{
		return -1;
	}
	return btnRelCnt_[keyCode];
}

//--------------------------------------------------------------------------
//●マウスの状態更新
//--------------------------------------------------------------------------
bool Mouse::Update(void)
{
	//TRACE("Mouseクラスを更新\n");
	GetMousePoint(&data_["X座標"], &data_["Y座標"]);
	data_["X座標"] -= offset_.x;
	data_["Y座標"] -= offset_.y;

	data_["ボタン"] = GetMouseInput();
	data_["ホイール"] = GetMouseWheelRotVol();

	for (int i = 0; i < KEY_NUM; i++)
	{
		if ((GetMouseInput() >> i) & 1)
		{
			//i番のボタンが押されていたら
			if (btnRelCnt_[i] > 0)
			{
				clickkCnt_++;
				//離されカウンタが0より大きければ
				btnRelCnt_[i] = 0;	//0に戻す
			}
			btnPresCnt_[i]++;	//押されカウンタを増やす
		}
		else
		{
			//i番のキーが離されていたら
			if (btnPresCnt_[i] > 0)
			{
				//押されカウンタが0より大きければ
				btnPresCnt_[i] = 0;	//0に戻す
			}
			btnRelCnt_[i]++;	//離されカウンタを増やす
		}
	}
	return true;
}

//--------------------------------------------------------------------------
//●初期化
//--------------------------------------------------------------------------
bool Mouse::Init(void)
{
	data_["X座標"]    = 0;
	data_["Y座標"]    = 0;
	data_["ボタン"]   = 0;
	data_["ホイール"] = 0;
	//data_["セーブ"]   = 0;
	//data_["ロード"]   = 0;
	//data_["ガイド"]   = 0;
	//data_["プレイ"]   = 0;
	//data_["初期化"]   = 0;
	return true;
}

//--------------------------------------------------------------------------
//●keyCodeが有効なキー番号か問う
//--------------------------------------------------------------------------
bool Mouse::isValidKeycode(int keyCode)
{
	if (!(0 <= keyCode && keyCode < KEY_NUM))
	{
		return false;
	}
	return true;
}
